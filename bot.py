import telebot
from telebot import types
from currency_converter import CurrencyConverter

money = None
values = None

currency = CurrencyConverter()

token = "7869731884:AAG35BNm9if41n2U1Iy656YgtnYJMfUYvaA"
bot = telebot.TeleBot(token=token)

@bot.message_handler(commands=['start', 'konvert'])
def start(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("100", callback_data="100")
    btn2 = types.InlineKeyboardButton("500", callback_data="500")
    btn3 = types.InlineKeyboardButton("1000", callback_data="1000")
    btn4 = types.InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ —Å—É–º–º—É", callback_data="self")

    markup.add(btn1, btn2, btn3, btn4)

    bot.send_message(message.chat.id, "–Ø –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –≤–∞–ª—é—Ç—É –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É! –í–≤–µ–¥–∏ —Å—É–º–º—É –∏ –≤—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—ã, –∏ —è –±—ã—Å—Ç—Ä–æ —Å–¥–µ–ª–∞—é —Ä–∞—Å—á—ë—Ç. üí±‚ú®", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.isdigit() or call.data == "self")
def amount(call):
    global money
    if call.data.isdigit():
        money = int(call.data)  
        choose_currency(call.message)  # –¢–µ–ø–µ—Ä—å —Å—Ä–∞–∑—É –≤—ã–±–∏—Ä–∞–µ–º –≤–∞–ª—é—Ç—É
    else:
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é —Å—É–º–º—É...")
        bot.register_next_step_handler(call.message, konvert)

def konvert(message):
    global money  
    try:
        money = int(message.text.strip())
        choose_currency(message)
    except ValueError:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
        bot.register_next_step_handler(message, konvert)

def choose_currency(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton("USD/EUR", callback_data="USD/EUR")
    btn2 = types.InlineKeyboardButton("USD/EUR", callback_data="USD/EUR")
    btn3 = types.InlineKeyboardButton("RUB/EUR", callback_data="RUB/EUR")
    btn4 = types.InlineKeyboardButton("–í–≤–µ—Å—Ç–∏ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É", callback_data="some")

    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.chat.id, f"–•–æ—Ä–æ—à–æ, –≤—ã –≤–≤–µ–ª–∏ —Å—É–º–º—É {money}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É üíµüí∏", reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
def konverter(callback):
    global money
    if callback.data != "some":
        values = callback.data.split('/')
        summ = currency.convert(money, values[0], values[1])
        bot.send_message(callback.message.chat.id, f"–í–æ—Ç –æ—Ç–≤–µ—Ç: {money} {values[0]} = {summ:.2f} {values[1]} üíµüí∏. –ú–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É.")
        start(callback.message)
    else:
        bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É üíµüí∏")
        bot.register_next_step_handler(callback.message, valutes)

def valutes(message):
    global money
    try:
        value = message.text.strip().split("/")
        if len(value) == 2:
            summ = currency.convert(money, value[0].upper(), value[1].upper())
            bot.send_message(message.chat.id, f"–í–∞—à –æ—Ç–≤–µ—Ç: {money} {value[0].upper()} = {summ:.2f} {value[1].upper()} üíµüí∏")
        else:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ USD/EUR")
            bot.register_next_step_handler(message, valutes)
    except Exception as e:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")
        bot.register_next_step_handler(message, valutes)

bot.polling(non_stop=True)
